work-type.jsp
IN method POST - work_type, price

------------------------------------------------------------------------------------------------------------------
work-types.jsp
OUT format JSON - 
[
  {work_type: "programming", price: 400},
  {work_type: "coding", price: 200},
  {work_type: "testing", price: 150}
]

IN method POST !!!onDelete!!! - work_type 
------------------------------------------------------------------------------------------------------------------
employee.jsp
IN method POST - personal_number, name, surname, address, post_code, city

------------------------------------------------------------------------------------------------------------------
employees.jsp
OUT format JSON - (only ACTIVE employees)
[
  {personal_number: 1, name: "John", surname: "Tester", address:"Testing 5", post_code: 12345, city: "Brno"},
  {personal_number: 2, name: "John", surname: "Plceholder", address:"Testing 6", post_code: 12345, city: "Brno"},
  {personal_number: 3, name: "Place", surname: "Holder", address:"Testing 7", post_code: 12345, city: "Brno"}
]

IN method POST !!!onDelete!!! - personal_number
------------------------------------------------------------------------------------------------------------------
worksheet.jsp
OUT format JSON -
[
  {personal_number: 1, name: "John", surname: "Tester", address:"Testing 5", post_code: 12345, city: "Brno"},
  {personal_number: 2, name: "John", surname: "Plceholder", address:"Testing 6", post_code: 12345, city: "Brno"},
  {personal_number: 3, name: "Place", surname: "Holder", address:"Testing 7", post_code: 12345, city: "Brno"}
]
[
  {work_type: "programming", price: 400},
  {work_type: "coding", price: 200},
  {work_type: "testing", price: 150}
]
IN method POST - employee, date, work_type-1, work_amount-1, work_type-2, work_amount-2
------------------------------------------------------------------------------------------------------------------
database-browser.jsp
OUT format JSON - (ACTIVE and NON-ACTIVE employees)
**zaměstnanci**
[
  {personal_number: 1, name: "John", surname: "Tester", address:"Testing 5", post_code: 12345, city: "Brno"},
  {personal_number: 2, name: "John", surname: "Plceholder", address:"Testing 6", post_code: 12345, city: "Brno"},
  {personal_number: 3, name: "Place", surname: "Holder", address:"Testing 7", post_code: 12345, city: "Brno"}
]
OUT format JSON
**faktury**
[
  {invoice_id: 1, employee: "11, John Tester", date: "2016/03", price: 3025},
  {invoice_id: 2, employee: "11, John Tester", date: "2016/04", price: 871},
  {invoice_id: 3, employee: "37, Place Holder", date: "2016/03", price: 4231},
  {invoice_id: 4, employee: "11, John Tester", date: "2016/06", price: 2344}
]

**nastavení filtrů**
IN - personal_number, surname, date_from, date_to

**pole faktur co mají být vytisknuty**
IN - [1,2,4,5,7,9]

------------------------------------------------------------------------------------------------------------------
invoice-detail.jsp
OUT - format JSON
[
	{personal_number: 1, name: "John", surname: "Tester", address:"Testing 5", post_code: 12345, city: "Brno"}, ------ informace o zamestnanci
	{-----tady neco bude-----}, ------ informace o firme
	{
		invoice_id: 4, 
		date: "2016/06", 
		price: 2344,
		[
			list works
		]
	} ------ informace o fakture
]

Priklad dat jak budou v invoice-detail.jps

[{"address":"Sadova 24","city":"Adamov","surname":"Kotol","post_code":67904,"name":"Lukáš ","personal_number":8},
{"date":"6\/2016","Work{work_id=3, work_type=test, price=20}":100,"price":555668000,"invoice_id":6,
"Work{work_id=5, work_type=lukasedited, price=555666000}":1}];

Atributy ve faktuře teda navrhuji takto:
id long (nebo int, radši bych zkusil long, pokud s tím nenarazím na problém)
date String (formát bude mm/rrrr asi včetně lomítka, tak bych dal String)
employer String
employee Employee
works List<Work+amount(tj. asi definovat nový typ)> nebo možná lépe
Map<Work,amount>
